*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="base.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS basecheckbox AS checkbox 
 	*< CLASSDATA: Baseclass="checkbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: anychange		&& Fired on any change in value
		*p: _memberdata
	*</DefinedPropArrayMethod>

	Alignment = 0
	AutoSize = .T.
	BackStyle = 0
	Caption = "Check1"
	FontName = "Segoe UI"
	Height = 17
	Name = "basecheckbox"
	Value = .F.
	Width = 57
	_memberdata = <VFPData>
		<memberdata name="anychange" display="AnyChange"/>
		</VFPData>
	
	PROCEDURE anychange		&& Fired on any change in value
		* Abstract method
		
	ENDPROC

	PROCEDURE InteractiveChange
		This.AnyChange()
		
	ENDPROC

	PROCEDURE ProgrammaticChange
		This.AnyChange()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS basecombobox AS combobox 
 	*< CLASSDATA: Baseclass="combobox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: anychange		&& Fired on any change in value
		*a: aitems[1,0]		&& An array of items for the list
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	FontName = "Segoe UI"
	Height = 24
	Name = "basecombobox"
	RowSource = "This.aItems"
	RowSourceType = 5
	Style = 2
	Width = 100
	_memberdata = <VFPData>
		<memberdata name="anychange" display="AnyChange"/>
		<memberdata name="aitems" display="aItems"/>
		</VFPData>		&& XML Metadata for customizable properties
	
	PROCEDURE anychange		&& Fired on any change in value
		* Abstract method.
		
	ENDPROC

	PROCEDURE Init
		This.aItems = ''
		
	ENDPROC

	PROCEDURE InteractiveChange
		This.AnyChange()
		
	ENDPROC

	PROCEDURE ProgrammaticChange
		This.AnyChange()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS basecommandbutton AS commandbutton 
 	*< CLASSDATA: Baseclass="commandbutton" Timestamp="" Scale="Pixels" Uniqueid="" />

	Caption = "Command1"
	FontName = "Segoe UI"
	Height = 27
	Name = "basecommandbutton"
	Width = 84

ENDDEFINE

DEFINE CLASS baseeditbox AS editbox 
 	*< CLASSDATA: Baseclass="editbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	FontName = "Segoe UI"
	Height = 53
	Name = "baseeditbox"
	Width = 100

ENDDEFINE

DEFINE CLASS baseform AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oPersist" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: cregistrykey		&& The Registry key used for persisting settings
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	AllowOutput = .F.
	BackColor = 255,255,255
	Caption = "Form"
	cregistrykey = 		&& The Registry key used for persisting settings
	Desktop = .T.
	DoCreate = .T.
	FontName = "Segoe UI"
	MaxButton = .F.
	MinButton = .F.
	Name = "baseform"
	ShowWindow = 1
	_memberdata = <VFPData>
		<memberdata name="cregistrykey" display="cRegistryKey"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'oPersist' AS sfpersistentform WITH ;
		Left = 345, ;
		Name = "oPersist", ;
		Top = 10
		*< END OBJECT: ClassLib="sfpersist.vcx" BaseClass="custom" />
	
	PROCEDURE Init
		* Set BorderStyle to non-resizable; we do it here rather than in the Property
		* window so the form is resizable at design time.
		
		This.BorderStyle = 2
		
	ENDPROC

	PROCEDURE KeyPress
		* Close the form on Esc.
		
		lparameters tnKeyCode, ;
			tnShiftAltCtrl
		if tnKeyCode = 27
			This.Release()
		endif tnKeyCode = 27
		
	ENDPROC

	PROCEDURE Load
		* If we're using a private datasession, set the environment.
		
		if This.DataSession = 2
			set ansi        off
			set bell        off			&& not datasession-specific
			set compatible  off			&& not datasession-specific
			set cpdialog    off			&& not datasession-specific
			set deleted     on
			set exact       off
			set exclusive   off
			set fullpath    on			&& not datasession-specific
			set multilocks  on
			set near        off
			set notify      off			&& not datasession-specific
			set nulldisplay to ''		&& not datasession-specific
			set safety      off
			set tableprompt off
			set talk        off
			set unique      off
				
		* Set CENTURY after SYSFORMATS, since SYSFORMATS changes CENTURY.
				
			set sysformats on
			set century    on
		endif This.DataSession = 2
		
		* Set the Registry key for the persist object.
		
		if not empty(This.cRegistryKey)
			This.oPersist.cKey = This.cRegistryKey
		endif not empty(This.cRegistryKey)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS basegrid AS grid 
 	*< CLASSDATA: Baseclass="grid" Timestamp="" Scale="Pixels" Uniqueid="" />

	DeleteMark = .F.
	FontName = "Segoe UI"
	Height = 200
	Name = "basegrid"
	RecordMark = .F.
	Width = 320

ENDDEFINE

DEFINE CLASS baselabel AS label 
 	*< CLASSDATA: Baseclass="label" Timestamp="" Scale="Pixels" Uniqueid="" />

	AutoSize = .T.
	BackStyle = 0
	Caption = "Label1"
	FontName = "Segoe UI"
	Height = 17
	Name = "baselabel"
	Width = 36

ENDDEFINE

DEFINE CLASS baselistbox AS listbox 
 	*< CLASSDATA: Baseclass="listbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: anychange		&& Fired on any change in value
		*a: aitems[1,0]		&& An array of items for the list
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	FontName = "Segoe UI"
	Height = 170
	ItemTips = .T.
	Name = "baselistbox"
	RowSource = "This.aItems"
	RowSourceType = 5
	Width = 100
	_memberdata = <VFPData>
		<memberdata name="aitems" display="aItems"/>
		<memberdata name="anychange" display="AnyChange"/>
		</VFPData>		&& XML Metadata for customizable properties
	
	PROCEDURE anychange		&& Fired on any change in value
		* Abstract method.
		
	ENDPROC

	PROCEDURE Init
		This.aItems = ''
		
	ENDPROC

	PROCEDURE InteractiveChange
		This.AnyChange()
		
	ENDPROC

	PROCEDURE ProgrammaticChange
		This.AnyChange()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS basespinner AS spinner 
 	*< CLASSDATA: Baseclass="spinner" Timestamp="" Scale="Pixels" Uniqueid="" />

	FontName = "Segoe UI"
	Height = 24
	Name = "basespinner"
	SelectOnEntry = .T.
	Width = 50

ENDDEFINE

DEFINE CLASS basetextbox AS textbox 
 	*< CLASSDATA: Baseclass="textbox" Timestamp="" Scale="Pixels" Uniqueid="" />

	FontName = "Segoe UI"
	Height = 23
	Name = "basetextbox"
	SelectOnEntry = .T.
	Width = 100

ENDDEFINE
